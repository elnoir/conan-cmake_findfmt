

include(FindPackageHandleStandardArgs)

message(STATUS "Conan: Using autogenerated Findfmt.cmake")
# Global approach
set(fmt_FOUND 1)
set(fmt_VERSION "5.3.0")

find_package_handle_standard_args(fmt REQUIRED_VARS fmt_VERSION VERSION_VAR fmt_VERSION)
mark_as_advanced(fmt_FOUND fmt_VERSION)



set(fmt_INCLUDE_DIRS "C:/Users/ebittner/.conan/data/fmt/5.3.0/bincrafters/stable/package/6cc50b139b9c3d27b3e9042d5f5372d327b3a9f7/include")
set(fmt_INCLUDES "C:/Users/ebittner/.conan/data/fmt/5.3.0/bincrafters/stable/package/6cc50b139b9c3d27b3e9042d5f5372d327b3a9f7/include")
set(fmt_DEFINITIONS )
set(fmt_LINKER_FLAGS_LIST "" "")  
set(fmt_COMPILE_DEFINITIONS )
set(fmt_COMPILE_OPTIONS_LIST "" "")
set(fmt_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
set(fmt_LIBRARIES "") # Will be filled later
set(fmt_LIBS "") # Same as fmt_LIBRARIES

mark_as_advanced(fmt_INCLUDE_DIRS 
                 fmt_INCLUDES
                 fmt_DEFINITIONS
                 fmt_LINKER_FLAGS_LIST 
                 fmt_COMPILE_DEFINITIONS
                 fmt_COMPILE_OPTIONS_LIST
                 fmt_LIBRARIES 
                 fmt_LIBS
                 fmt_LIBRARIES_TARGETS)

# Find the real .lib/.a and add them to fmt_LIBS and fmt_LIBRARY_LIST
set(fmt_LIBRARY_LIST fmt)
set(fmt_LIB_DIRS "C:/Users/ebittner/.conan/data/fmt/5.3.0/bincrafters/stable/package/6cc50b139b9c3d27b3e9042d5f5372d327b3a9f7/lib")
foreach(_LIBRARY_NAME ${fmt_LIBRARY_LIST})
    unset(CONAN_FOUND_LIBRARY CACHE)
    find_library(CONAN_FOUND_LIBRARY NAME ${_LIBRARY_NAME} PATHS ${fmt_LIB_DIRS}
                 NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
    if(CONAN_FOUND_LIBRARY)
        list(APPEND fmt_LIBRARIES ${CONAN_FOUND_LIBRARY})
        if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
            # Create a micro-target for each lib/a found
            set(_LIB_NAME CONAN_LIB::fmt_${_LIBRARY_NAME})
            if(NOT TARGET ${_LIB_NAME})
                # Create a micro-target for each lib/a found
                add_library(${_LIB_NAME} UNKNOWN IMPORTED)
                set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
            else()
                message(STATUS "Skipping already existing target: ${_LIB_NAME}")
            endif()
            list(APPEND fmt_LIBRARIES_TARGETS ${_LIB_NAME})
        endif()
        message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
    else()
        message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
        list(APPEND fmt_LIBRARIES_TARGETS ${_LIBRARY_NAME})
        list(APPEND fmt_LIBRARIES ${_LIBRARY_NAME})
    endif()
endforeach()
set(fmt_LIBS ${fmt_LIBRARIES})

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET fmt::fmt)
        add_library(fmt::fmt INTERFACE IMPORTED)
        
    if(fmt_INCLUDE_DIRS)
      set_target_properties(fmt::fmt PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${fmt_INCLUDE_DIRS}")
    endif()
    set_property(TARGET fmt::fmt PROPERTY INTERFACE_LINK_LIBRARIES ${fmt_LIBRARIES_TARGETS} "${fmt_LINKER_FLAGS_LIST}")
    set_property(TARGET fmt::fmt PROPERTY INTERFACE_COMPILE_DEFINITIONS ${fmt_COMPILE_DEFINITIONS})
    set_property(TARGET fmt::fmt PROPERTY INTERFACE_COMPILE_OPTIONS "${fmt_COMPILE_OPTIONS_LIST}")   

        
    endif()
endif()
